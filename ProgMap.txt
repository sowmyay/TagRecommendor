std::map<std::string, std::string> m;

//---------------------------------
// General Operations
//---------------------------------

//Insert
m.insert(std::pair<std::string, std::string>("key", "value"));

//Access key, value
std::string value = m.at("key");
std::string value = *(std::map<std::string, std::string>::iterator it = m.find("value"));

//Size
unsigned int size = m.size();

//Iterate
for(std::map<int>::iterator it = m.begin(); it != m.end(); it++) {
    std::cout << "key"*it << std::endl;
}

//Remove by key, value
m.erase("key");
m.erase(m.find("value"));

//Clear
m.clear();

//---------------------------------
// Container-Specific Operations
//---------------------------------

//Find if an element exists by value
bool exists = (m.find("value") != m.end());

//Count the number of elements with a certain key
unsigned int count = m.count("key");