std::list<int> l;

//---------------------------------
// General Operations
//---------------------------------

//Insert head, index, tail
l.push_front(value);                    //head
l.insert(l.begin() + index, value);     //index
l.push_back(value);                     //tail

//Access head, index, tail
int head = l.front();                                           //head
int value = std::list<int>::iterator it = l.begin() + index;    //index
int tail = l.back();                                            //tail

//Size
unsigned int size = l.size();

//Iterate
for(std::list<int>::iterator it = l.begin(); it != l.end(); it++) {
    std::cout << *it << std::endl;
}

//Remove head, index, tail
l.pop_front();                  //head
l.erase(l.begin() + index);     //index
l.pop_back();                   //tail

//Clear
l.clear();

//---------------------------------
// Container-Specific Operations
//---------------------------------

//Splice: Transfer elements from list to list
//  splice(iterator pos, list &x)
//  splice(iterator pos, list &x, iterator i)
//  splice(iterator pos, list &x, iterator first, iterator last)
l.splice(l.begin() + index, list2);

//Remove: Remove an element by value
l.remove(value);

//Unique: Remove duplicates
l.unique();

//Merge: Merge two sorted lists
l.merge(list2);

//Sort: Sort the list
l.sort();

//Reverse: Reverse the list order
l.reverse();